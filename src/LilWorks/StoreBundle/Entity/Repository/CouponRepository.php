<?php

namespace LilWorks\StoreBundle\Entity\Repository;

/**
 * CouponRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CouponRepository extends \Doctrine\ORM\EntityRepository
{

    protected $context;
    protected $mode;

    /**
     * Allow limit to be set by parameter, injected by service definition
     * @param $context
     * @param $mode
     */
    public function setParams($context,$mode) {
        $this->context = $context;
        $this->mode = $mode;
    }


    public function getNextReference($coupon){

        $prefix = $this->getEntityManager()->getRepository("LilWorksStoreBundle:PaymentMethod")->findOneByTag("COUPON")->getPrefix();
        if($this->context == "online" && $this->mode == "slave")
            $prefix.="I";

        if(!$prefix)
            return null;

        $year = ($coupon->getCreatedAt()) ? $coupon->getCreatedAt()->format('Y') : date('Y') ;

        $qb = $this->createQueryBuilder('c');
        $qb
            ->select('c.reference')
            ->where('c.reference LIKE :filter')
            ->setParameter('filter', $year.'-'.$prefix.'%');

        $results = $qb->getQuery()->getScalarResult();
        if(count($results)>0){
            $values = array();
            foreach($results as $result){
                array_push($values,intval(str_replace( $year.'-'.$prefix ,"",$result["reference"] ))) ;
            }
            rsort($values);
            $nextIndex = $values[0]+1;
        }else{
            $nextIndex = 1;
        }

        $zeroLeft = 5 - strlen(strval($nextIndex));
        for($i=0;$i<$zeroLeft;$i++){
            $nextIndex =  "0" . $nextIndex;
        }

        return "$year-$prefix$nextIndex";

    }
}
